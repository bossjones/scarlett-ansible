# file: scarlett.common/tasks/setup_pulseaudio.yml
---

- name: Read the setup_pulseaudio variables
  include_vars: "setup_pulseaudio.yml"

- name: Make sure the sound_libs packages are installed (Debian)
  apt:
    name: "{{item}}"
    state: present
  with_items: "{{sound_libs}}"
  become: true
  tags:
  - audio
  - packages

- name: Make sure the setup_pulseaudio packages are installed (Debian)
  apt:
    name: "{{item}}"
    state: present
  with_items: "{{setup_pulseaudio}}"
  become: true
  tags:
  - pulse
  - pulseaudio
  - packages

- name: configure pulseaudio
  template: src="{{ role_path }}/templates/etc/pulse/{{ item }}.j2"
            dest=/etc/pulse/{{ item }}
            owner=root
            group=root
            mode=0644
            backup=yes
  with_items:
  - client.conf
  - daemon.conf
  - default.pa
  - system.pa
  tags:
  - pulse
  # notify: clear pulseaudio cache
  # when: configure_pulse is defined
  # NOTE if the above var is not defined, don't run this step at all

# NOTE: This fixes 14.04 ALC892 Low sound issue
# Source: http://askubuntu.com/questions/456425/alc892-low-sound-issue-fixed-with-changing-alsa-config-why-does-it-work
- name: configure /etc/modprobe.d/alsa-base.conf
  template: src="{{ role_path }}/templates/etc/modprobe.d/alsa-base.conf.j2"
            dest=/etc/modprobe.d/alsa-base.conf
            owner=root
            group=root
            mode=0644
            backup=yes
  tags:
  - alsa
  - configuration
  - sound

# Disallow module loading after startup. This is a security feature since it disallows additional module loading during runtime and on user request.
# this file has the following change:
# sudo sed -i "s,DISALLOW_MODULE_LOADING=1,DISALLOW_MODULE_LOADING=0,g" /etc/default/pulseaudio
# source: http://manpages.ubuntu.com/manpages/xenial/man5/pulse-daemon.conf.5.html
- name: configure /etc/init/pulseaudio.conf
  template: src="{{ role_path }}/templates/etc/init/pulseaudio.conf.j2"
            dest=/etc/init/pulseaudio.conf
            owner=root
            group=root
            mode=0644
            backup=yes
  tags:
  - pulse
  - configuration
  - sound
  - pulseaudio

- name: configure alsa-info.sh
  copy: src="{{ role_path }}/files/usr/local/bin/{{ item }}"
        dest=/usr/install/{{ item }}
        owner=pi
        group=pi
        mode=0755
  with_items:
  - alsa-info.sh
  tags:
  - alsa
  - shellscripts

# NEEDED FOR USB MIC MINI
# $ pacmd "load-module module-alsa-source source_name=input device=hw:1"
# $ pacmd "set-default-source input"
# $ pactl stat

- name: pacmd "load-module module-alsa-source source_name=input device=hw:1"
  command: pacmd "load-module module-alsa-source source_name=input device=hw:1"
  tags:
  - pulseaudio
  become: pi
  become_user: pi
  ignore_errors: yes

- name: pacmd "set-default-source input"
  command: pacmd "set-default-source input"
  tags:
  - pulseaudio
  become: pi
  become_user: pi
  ignore_errors: yes

- shell: pacmd "load-module module-alsa-source source_name=input device=hw:1"
  become: pi
  become_user: pi
  ignore_errors: yes

- shell: pacmd "set-default-source input"
  become: pi
  become_user: pi
  ignore_errors: yes

# source: http://www.freedesktop.org/wiki/Software/PulseAudio/Documentation/User/PerfectSetup/
# GStreamer Applications

# Applications using the modern GStreamer media framework such as Rhythmbox or Totem can make use of the PulseAudio through gst-pulse, the PulseAudio plugin for GStreamer in gst-plugins-good. After installing it, you have to enable it as default audio sink and source for all GNOME applications by changing the GConf keys /system/gstreamer/0.10/default/audiosink and /system/gstreamer/0.10/default/audiosrc:

# gconftool -t string --set /system/gstreamer/0.10/default/audiosink pulsesink
# gconftool -t string --set /system/gstreamer/0.10/default/audiosrc pulsesrc
# Alternatively, you can make these changes with the GUI tool gstreamer-properties.

# The GStreamer plugin wraps playback, recording and the mixer interface.

- name: configure /etc/asound.conf
  template: src="{{ role_path }}/templates/etc/asound.conf.j2"
            dest=/etc/asound.conf
            owner=root
            group=root
            mode=0644
            backup=yes
  tags:
  - alsa
  - configuration
  - sound
  - asound

- name: configure /etc/libao.conf
  template: src="{{ role_path }}/templates/etc/libao.conf.j2"
            dest=/etc/libao.conf
            owner=root
            group=root
            mode=0644
            backup=yes
  tags:
  - pulse
  - alsa
  - configuration
  - sound
  - libao

- name: configure /etc/default/speech-dispatcher
  template: src="{{ role_path }}/templates/etc/default/speech-dispatcher.j2"
            dest=/etc/default/speech-dispatcher
            owner=root
            group=root
            mode=0644
            backup=yes
  tags:
  - speech-dispatcher
  - configuration
  - sound


# Some of the systemd/user setup details were extracted from the Arch AUR
# package `pulseaudio-systemd`. It could be installed using
# `packer -S pulseaudio-systemd` but I had more success doing these steps
# manually.
#
# NB: You can manually run the start command from `pulseaudio.service` to test
# # your config.
#
# - name: install packages
#   pacman: name={{ item }} state=installed
#   with_items:
#     - python
#     - pulseaudio
#     - alsa-utils
#     - alsa-firmware
#     - alsa-lib
#     - alsa-plugins
#
# - name: configure pulseaudio system-wide systemd permissions
#   copy: >
#     src=pulseaudio-system-wide.conf
#     dest=/etc/dbus-1/system.d/pulseaudio-system-wide.conf
#     owner=root
#     mode=0644
# - name: configure pulseaudio system-wide systemd unit
#   copy: >
#     src=pulseaudio.service
#     dest=/usr/lib/systemd/system/pulseaudio.service
#     owner=root
#     mode=0644
# - name: configure pulseaudio audio settings
#   copy: >
#     src=daemon.conf
#     dest=/etc/pulse/daemon.conf
#     owner=root
#     backup=true
# - name: configure pulseaudio system settings
#   copy: >
#     src=system.pa
#     dest=/etc/pulse/system.pa
#     owner=root
#     backup=true
# - name: create the pulse group
#   command: groupadd pulse
#   ignore_errors: true
#
# - name: set-up pulse user with audio access
#   command: useradd -r pulse -d /var/run/pulse -g pulse -G audio -c "PulseAudio" -s /bin/false
#   ignore_errors: true
#
# - name: enable system-wide pulseaudio
#   command: systemctl enable pulseaudio
#
# - name: start system-wide pulseaudio
#   action: service name=pulseaudio state=started
